#!/usr/bin/env ruby

require 'optparse'
require 'gls_agent'

options = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: gls_create_label [OPTIONS]"

  opts.separator ""
  opts.separator "GLS login options"

  opts.on('-u', '--gls-user GLSUSER', 'username of GLS account.') do |u|
    options[:user] = u
  end
  opts.on('-p', '--gls-password GLSPASSWORD', 'password of GLS account.') do |p|
    options[:pass] = p
  end

  opts.separator ""
  opts.separator "Label data definition"

  opts.on('-l', '--label-data DATA', 'Label data, comma-separated.') do |l|
    fields = l.split(',')
    if fields.length != 6
      STDERR.puts 'Error: label data has to be in format "John Doe,Home Street,1,1234,City,1".'
      exit 1
    end
    options[:name] = fields.shift
    options[:street] = fields.shift
    options[:streetno] = fields.shift
    options[:zip] = fields.shift
    options[:city] = fields.shift
    options[:weight] = fields.shift
  end

  opts.separator ""
  opts.separator "Output options"

  opts.on('-o', '--output-file FILE', 'Write output (pdf) to FILE, defaults to gls-label.pdf .') do |o|
    options[:output_file] = o
  end

  opts.separator ""
  opts.separator "General options"

  opts.on_tail('--version', 'Show version.') do
    puts "gls_create_label #{GLSAgent::VERSION}"
    exit 0
  end
  opts.on('-h', '--help', 'Show help.') do
    puts opts
    exit 0
  end
end

optparse.parse!

defaults = GLSAgent::Dotfile::get_opts
options = defaults.merge options

if !options[:user] || !options[:pass]
  STDERR.puts 'Error: Need to specify user and pass in ~/.gls_agent or -u -p .'
  exit 1
end

if !options[:name] || !options[:street] || !options[:streetno] || !options[:zip] || !options[:city] || !options[:weight]
  STDERR.puts 'Error: Need to specify delivery data in ~/.gls_agent or -l .'
  exit 1
end

options[:output_file] ||= 'gls-label.pdf'

parcel = GLSAgent::job_from_hash(options)

mech = GLSMech.new
mech.user = options[:user]
mech.pass = options[:pass]

pdf_file_path = mech.save_parcel_label parcel, options[:output_file]

if !pdf_file_path
  STDERR.puts "Error: Could not login or navigate GLS page."
  exit 2
end

if pdf_file_path != options[:output_file]
  STDERR.puts "Warning: #{options[:output_file]} already exists, saved to #{pdf_file_path} instead!."
else
  puts "Success: Saved label to #{pdf_file_path}."
end

# Be cool, explicitely.
exit 0
